#!/usr/bin/env ruby

preprocess do
  tags = @items.map { |i| i[:tags] }.flatten.uniq
  tags.each do |tag|
    next unless tag
    content = ''
    attributes = { tag: tag }
    identifier = "/blog/tags/#{tag}"

    @items.create(content, attributes, identifier)
  end
end

compile '/blog/tags/*' do
  layout '/tags.*'
end

route '/blog/tags/*' do
  '/blog/tags/' + item.identifier.to_s.split('/')[-1] + '/index.html'
end

compile '/index.html' do
  filter :erb
  layout '/default.*'
  write '/index.html'
end

compile '/**/*.html' do
  filter :erb
  layout '/default.*'
  write item.identifier.without_ext + '/index.html'
end

compile '/blog/*.md' do
  filter :pandoc, args: [
    :katex,
  ]
  layout '/post.*'
  y,m,d,slug = /([0-9]+)\-([0-9]+)\-([0-9]+)\-([^\/]+).md/.match(item.identifier).captures
  write "/blog/#{y}/#{m}/#{d}/#{slug}.html"
end

compile '/**/*' do
  write item.identifier.to_s
end

layout '/**/*', :erb
