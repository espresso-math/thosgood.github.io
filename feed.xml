<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://thosgood.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://thosgood.github.io/" rel="alternate" type="text/html" /><updated>2019-09-05T00:08:11+00:00</updated><id>https://thosgood.github.io/feed.xml</id><title type="html">Tim Hosgood</title><entry><title type="html">Weighted limits, ends, and Day convolution</title><link href="https://thosgood.github.io/blog/2019/09/05/day-convolution-part-3.html" rel="alternate" type="text/html" title="Weighted limits, ends, and Day convolution" /><published>2019-09-05T00:00:00+00:00</published><updated>2019-09-05T00:00:00+00:00</updated><id>https://thosgood.github.io/blog/2019/09/05/day-convolution-part-3</id><content type="html" xml:base="https://thosgood.github.io/blog/2019/09/05/day-convolution-part-3.html">&lt;p&gt;&lt;em&gt;[&lt;a href=&quot;/blog/2017/12/08/day-convolution-part-1.html&quot;&gt;Part 1&lt;/a&gt;, &lt;a href=&quot;/blog/2018/02/15/day-convolution-part-2.html&quot;&gt;Part 2&lt;/a&gt;]&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Finally, I find myself with enough motivation to start writing the last part to this series. It’s been a while, but hopefully nobody has actually been waiting… This is where we will finally see some of the exciting applications of (co)ends, including tensor products, geometric realisation, and Day convolution. One reason I’ve got around to writing this post is because coends (or, really, cowedges) appeared to me recently in a tweet about Stokes’ theorem, which I found pretty neat indeed — more details can be found in &lt;a href=&quot;/blog/2019/09/04/stokes-coend.html&quot;&gt;this post&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;
&lt;hr /&gt;

&lt;p&gt;For a refresher on all the definitions, you can check out the two previous parts in this series (the links are at the top), because we’re just going to dive right in.&lt;/p&gt;

&lt;h2 id=&quot;tensor-products&quot;&gt;Tensor products&lt;/h2&gt;

&lt;p&gt;Let &lt;script type=&quot;math/tex&quot;&gt;\colon\mathcal{C}^\mathrm{op}\to\mathcal{D}&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;G\colon\mathcal{C}\to\mathcal{D}&lt;/script&gt; be &lt;script type=&quot;math/tex&quot;&gt;\mathcal{V}&lt;/script&gt;-functors. Then we define their &lt;em&gt;tensor product&lt;/em&gt; to be, &lt;strong&gt;if it exists&lt;/strong&gt;, the coend&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;F\otimes_\mathcal{C}G = \int^{c\in\mathcal{C}}F(c)\otimes G(c).&lt;/script&gt;

&lt;p&gt;As before, we have a non-enriched definition: whenever &lt;script type=&quot;math/tex&quot;&gt;\mathcal{D}&lt;/script&gt; has &lt;strong&gt;all coproducts&lt;/strong&gt;, we can define&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;F\otimes_\mathcal{C}G = \int^{c\in\mathcal{C}}F(c)\cdot G(c)&lt;/script&gt;

&lt;p&gt;where &lt;script type=&quot;math/tex&quot;&gt;S\cdot d=\coprod_{s\in S}d&lt;/script&gt; for any set &lt;script type=&quot;math/tex&quot;&gt;S&lt;/script&gt; and any object &lt;script type=&quot;math/tex&quot;&gt;d\in D&lt;/script&gt;.&lt;/p&gt;

&lt;h3 id=&quot;examples&quot;&gt;Examples&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Consider a ring &lt;script type=&quot;math/tex&quot;&gt;R&lt;/script&gt; as a one-object &lt;script type=&quot;math/tex&quot;&gt;\mathsf{Ab}&lt;/script&gt;-enriched. Then a right &lt;script type=&quot;math/tex&quot;&gt;R&lt;/script&gt;-module gives an additive functor &lt;script type=&quot;math/tex&quot;&gt;R^\mathrm{op}\to\mathsf{Ab}&lt;/script&gt;, and a left &lt;script type=&quot;math/tex&quot;&gt;R&lt;/script&gt;-module gives an additive functor &lt;script type=&quot;math/tex&quot;&gt;R\to\mathsf{Ab}&lt;/script&gt;. Then their tensor product, as &lt;script type=&quot;math/tex&quot;&gt;\mathsf{Ab}&lt;/script&gt;-enriched functors, coincides with their usual tensor product as &lt;script type=&quot;math/tex&quot;&gt;R&lt;/script&gt;-modules.&lt;/p&gt;

    &lt;p&gt;This example is actually really linked to the theory of &lt;em&gt;profunctors&lt;/em&gt;, which we will talk about below, but have already talked about &lt;a href=&quot;/blog/2019/07/14/cauchy-completion-and-profunctors.html#categorically&quot;&gt;in a previous post&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The co-Yoneda lemma &lt;script type=&quot;math/tex&quot;&gt;F \cong \int^{c\in\mathcal{C}} \mathcal{C}(-,c)\otimes F(c)&lt;/script&gt; can now just be written as&lt;/p&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;F\cong F\otimes_\mathcal{C}よ&lt;/script&gt;

    &lt;p&gt;where &lt;script type=&quot;math/tex&quot;&gt;よ\colon\mathcal{C}\to\widehat{\mathcal{C}}&lt;/script&gt; is the Yoneda embedding.&lt;/p&gt;

    &lt;p&gt;This lets us state the powerful adage, that “representable functors generalise free modules. To see what this might mean, we state the co-Yoneda lemma applied to a representable functor, as well as a basic theorem about tensor products of free modules, and leave the drawing of connections between the two to the interested reader:&lt;/p&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{aligned}
      \operatorname{Hom}_\mathcal{C}(-,c)\otimes_\mathcal{C}F &amp;\cong F(c)\\
      R^n\otimes_R M &amp;\cong M^n.
  \end{aligned} %]]&gt;&lt;/script&gt;

    &lt;p&gt;Suggestive, right?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Geometric realisation of a simplicial set &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt; can also be expressed as a tensor product. If we write &lt;script type=&quot;math/tex&quot;&gt;\vert-\vert\colon\Delta\to\mathsf{Top}&lt;/script&gt; to mean the functor that sends &lt;script type=&quot;math/tex&quot;&gt;[n]&lt;/script&gt; to the topological &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;-simplex, then we can write the geometric realisation &lt;script type=&quot;math/tex&quot;&gt;\vert X\vert&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt; as&lt;/p&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;\vert X\vert\cong X\otimes_\Delta\vert-\vert.&lt;/script&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;day-convolution&quot;&gt;Day convolution&lt;/h2&gt;

&lt;p&gt;As a motivation for the definition of Day convolution, we first recall the classical notion of convolution (albeit phrased in a more categorical language). Consider &lt;script type=&quot;math/tex&quot;&gt;\mathbb{N}&lt;/script&gt; as a &lt;strong&gt;discrete&lt;/strong&gt; category with addition as a monoidal product. Let &lt;script type=&quot;math/tex&quot;&gt;F,G\colon\mathbb{N}\to\mathsf{Set}&lt;/script&gt; be functors, which we can think of as &lt;em&gt;graded sets&lt;/em&gt;. Then their &lt;em&gt;convolution&lt;/em&gt; &lt;script type=&quot;math/tex&quot;&gt;(F*G)\colon\mathbb{N}\to\mathsf{Set}&lt;/script&gt; is defined by&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{aligned}
(F*G)(n) &amp;= \sum_{i+j=n} F(i)\otimes G(j)\\
&amp;= \sum_{i,j=1}^n F(i)\otimes G(j)\otimes\operatorname{Hom}_\mathbb{N}(n,i+j)
\end{aligned} %]]&gt;&lt;/script&gt;

&lt;p&gt;where the second equality follows from the fact that &lt;script type=&quot;math/tex&quot;&gt;\mathbb{N}&lt;/script&gt; is discrete. It might seem like an excessively abstract way of writing some Kronecker delta function, but it is exactly the thing that makes this definition easy to abstractify and generalise.&lt;/p&gt;

&lt;p&gt;So now let &lt;script type=&quot;math/tex&quot;&gt;F,G\in\widehat{\mathcal{C}}=[\mathcal{C}^\mathrm{op},\mathcal{V}]=\mathsf{PrSh}_\mathcal{V}(\mathcal{C})&lt;/script&gt; (or whichever other notation you most like that says that &lt;script type=&quot;math/tex&quot;&gt;F&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; are &lt;script type=&quot;math/tex&quot;&gt;\mathcal{V}&lt;/script&gt;-valued presheaves). Then we define their &lt;em&gt;Day convolution&lt;/em&gt; &lt;script type=&quot;math/tex&quot;&gt;(F*G)\in\widehat{\mathcal{C}}&lt;/script&gt; by&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;(F*G)(c) = \int^{x,x'\in\mathcal{C}} F(x)\otimes G(x')\otimes\operatorname{Hom}_\mathcal{C}(c,x\otimes x')&lt;/script&gt;

&lt;p&gt;or, if you &lt;em&gt;really&lt;/em&gt; like tensor-product notation more than coend notation, by&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;(F*G)(c) = (F\otimes G)\otimes_{\mathcal{C}\times\mathcal{C}}\operatorname{Hom}_\mathcal{C}(-\otimes-).&lt;/script&gt;

&lt;p&gt;As I already mentioned in my &lt;a href=&quot;/blog/2019/07/14/cauchy-completion-and-profunctors.html&quot;&gt;post about profunctors&lt;/a&gt;, there is a notion of Cauchy completion for presheaves. Something that I often heard say is that the presheaf category &lt;em&gt;itself&lt;/em&gt; is the ‘free cocompletion’ of the original category. There are a bunch of ways of explaining what this means, but my favourite ‘proof’ is using Day convolution, the co-Yoneda lemma, and the fact that the Yoneda embedding &lt;script type=&quot;math/tex&quot;&gt;よ\colon\mathcal{C}\to\widehat{\mathcal{C}}&lt;/script&gt; is &lt;strong&gt;monoidal&lt;/strong&gt;:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{aligned}
    &amp;\big( \operatorname{Hom}_\mathcal{C}(-,x)*\operatorname{Hom}_\mathcal{C}(-,x') \big)(c)\\
    \cong &amp;\int^{y,y'\in\mathcal{C}}\operatorname{Hom}_\mathcal{C}(y,x)\otimes\operatorname{Hom}_\mathcal{C}(y',x')\otimes\operatorname{Hom}_\mathcal{C}(c,y\otimes y')\\
    \cong &amp;\int^{y\in\mathcal{C}}\operatorname{Hom}_\mathcal{C}(y,x)\otimes\operatorname{Hom}_\mathcal{C}(c,y\otimes x')\\
    \cong &amp;\operatorname{Hom}_\mathcal{C}(c,x\otimes x')
\end{aligned} %]]&gt;&lt;/script&gt;

&lt;p&gt;where the first isomorphism is by definition, and the last two are by co-Yoneda. That is,&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\operatorname{Hom}_\mathcal{C}(-,x)*\operatorname{Hom}_\mathcal{C}(-,x') \cong \operatorname{Hom}_\mathcal{C}(-,x\otimes x').&lt;/script&gt;

&lt;p&gt;Here we can think of &lt;script type=&quot;math/tex&quot;&gt;\widehat{\mathcal{C}}&lt;/script&gt; as being &lt;strong&gt;enriched&lt;/strong&gt; if we want: we can work with &lt;script type=&quot;math/tex&quot;&gt;\mathcal{V}&lt;/script&gt;-valued presheaves instead of &lt;script type=&quot;math/tex&quot;&gt;\mathsf{Set}&lt;/script&gt;-valued ones.&lt;/p&gt;

&lt;h3 id=&quot;monoid-algebra&quot;&gt;Monoid algebra&lt;/h3&gt;

&lt;p&gt;Remembering all that we’ve said above about free modules, and how Day convolution is basically the presheaf version of the tensor product from the original category, I would like to repeat some of what &lt;a href=&quot;http://web.science.mq.edu.au/~alexc/&quot;&gt;Alexander Campbell&lt;/a&gt; wrote in response to a &lt;a href=&quot;https://math.stackexchange.com/questions/1650786/day-convolution-intuition&quot;&gt;question I asked about Day convolution&lt;/a&gt; during the writing of my masters thesis.&lt;/p&gt;

&lt;p&gt;There is a beautiful formal analogy between Day convolution and monoid algebra, which takes the following form:&lt;/p&gt;

&lt;table class=&quot;bordered-table&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;monoid algebra&lt;/th&gt;
      &lt;th&gt;Day convolution&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;set&lt;/td&gt;
      &lt;td&gt;category&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;monoid&lt;/td&gt;
      &lt;td&gt;monoidal category&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ring &lt;script type=&quot;math/tex&quot;&gt;R&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt;monoidally cocomplete&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; category&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;R&lt;/script&gt;-module&lt;/td&gt;
      &lt;td&gt;cocomplete &lt;script type=&quot;math/tex&quot;&gt;\mathcal{V}&lt;/script&gt;-category&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;R&lt;/script&gt;-algebra&lt;/td&gt;
      &lt;td&gt;monoidally cocomplete &lt;script type=&quot;math/tex&quot;&gt;\mathcal{V}&lt;/script&gt;-category&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;free &lt;script type=&quot;math/tex&quot;&gt;R&lt;/script&gt;-module &lt;script type=&quot;math/tex&quot;&gt;R^{(X)}&lt;/script&gt; on a set &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt;free cocomplete &lt;script type=&quot;math/tex&quot;&gt;\mathcal{V}&lt;/script&gt;-category &lt;script type=&quot;math/tex&quot;&gt;\widehat{\mathcal{C}}&lt;/script&gt; on a category &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}&lt;/script&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;free &lt;script type=&quot;math/tex&quot;&gt;R&lt;/script&gt;-module &lt;script type=&quot;math/tex&quot;&gt;R^{(X)}&lt;/script&gt; on a monoid &lt;script type=&quot;math/tex&quot;&gt;M&lt;/script&gt; with the convolution product&lt;/td&gt;
      &lt;td&gt;free monoidally cocomplete &lt;script type=&quot;math/tex&quot;&gt;\mathcal{V}&lt;/script&gt;-category &lt;script type=&quot;math/tex&quot;&gt;\widehat{\mathcal{A}}&lt;/script&gt; on a monoidal category &lt;script type=&quot;math/tex&quot;&gt;\mathcal{A}&lt;/script&gt; with Day convolution&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;profunctors&quot;&gt;Profunctors&lt;/h2&gt;

&lt;p&gt;Just to have my obligatory “here is something that I don’t understand” that all of my posts seem to have, I wrote down in my notes (only a few weeks ago) the following sentence&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;profunctors! composition is via coends
and this looks like ∃ for composition of relations
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I have a vague idea of what this means: when we compose relations we do it ‘by existence’, in that&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;SR(x,y)\iff\exists t\text{ s.t. }R(x,t)\wedge S(t,y)&lt;/script&gt;

&lt;p&gt;and this somehow looks like a coend, but I have no idea (nor, really, the time (nor, really, the skill) to properly think about) how to make this formal. Any ideas?&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h1&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;That is, a cocomplete monoidal category &lt;script type=&quot;math/tex&quot;&gt;\mathcal{V}&lt;/script&gt; such that &lt;script type=&quot;math/tex&quot;&gt;\otimes\colon\mathcal{V}\times\mathcal{V}\to\mathcal{V}&lt;/script&gt; is cocontinuous in each variable. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><category term="blog" /><category term="category-theory" /><summary type="html">[Part 1, Part 2] Finally, I find myself with enough motivation to start writing the last part to this series. It’s been a while, but hopefully nobody has actually been waiting… This is where we will finally see some of the exciting applications of (co)ends, including tensor products, geometric realisation, and Day convolution. One reason I’ve got around to writing this post is because coends (or, really, cowedges) appeared to me recently in a tweet about Stokes’ theorem, which I found pretty neat indeed — more details can be found in this post.</summary></entry><entry><title type="html">Everything is Stokes’; everything is coend</title><link href="https://thosgood.github.io/blog/2019/09/04/stokes-coend.html" rel="alternate" type="text/html" title="Everything is Stokes'; everything is coend" /><published>2019-09-04T00:00:00+00:00</published><updated>2019-09-04T00:00:00+00:00</updated><id>https://thosgood.github.io/blog/2019/09/04/stokes-coend</id><content type="html" xml:base="https://thosgood.github.io/blog/2019/09/04/stokes-coend.html">&lt;p&gt;For category theorists, the idea that “everything is a Kan extension” is a familiar one, as is the slightly more abstract version “everything is a (co)end”. For differential geometers, the idea that “everything is Stokes’ theorem” is sort of the equivalent adage. In an entirely typical turn of events, it seems that these two seemingly unrelated aphorisms can be linked together, as I found out today on Twitter.&lt;/p&gt;

&lt;!--more--&gt;
&lt;hr /&gt;

&lt;p&gt;Today, &lt;a href=&quot;https://twitter.com/ququ7&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@ququ7&lt;/code&gt;&lt;/a&gt; tweeted/twote/twut that, &lt;a href=&quot;https://twitter.com/ququ7/status/1169048827703287814&quot;&gt;a few years back, Tim Campion had told him how Stokes’ theorem is a result about coends&lt;/a&gt;. All I want to do here is share this great little snippet, but I won’t be doing much more than just repeating exactly the contents of the above tweet, so you might as well just go check it out there!&lt;/p&gt;

&lt;p&gt;Here’s the idea. We look at &lt;script type=&quot;math/tex&quot;&gt;\mathbb{N}&lt;/script&gt; as a poset, the category &lt;script type=&quot;math/tex&quot;&gt;\mathsf{Vect}_\mathbb{R}&lt;/script&gt; of real-vector spaces, and fix some manifold &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt;. Then we have two pretty standard functors.&lt;/p&gt;

&lt;p&gt;Firstly, we have &lt;script type=&quot;math/tex&quot;&gt;C^X:\mathbb{N}^\mathrm{op}\to\mathsf{Vect}_\mathbb{R}&lt;/script&gt;, which sends &lt;script type=&quot;math/tex&quot;&gt;n\in\mathbb{N}&lt;/script&gt; to the free vector space &lt;script type=&quot;math/tex&quot;&gt;C_n=\langle\varphi\colon Y\to X\rangle_\mathbb{R}&lt;/script&gt;, where &lt;script type=&quot;math/tex&quot;&gt;\varphi\colon Y\to X&lt;/script&gt; are smooth maps from compact, &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;-dimensional, oriented manifolds &lt;script type=&quot;math/tex&quot;&gt;Y&lt;/script&gt; with boundary, and acts on morphisms by sending &lt;script type=&quot;math/tex&quot;&gt;n\to n+1&lt;/script&gt; to the map &lt;script type=&quot;math/tex&quot;&gt;\partial\colon C_{n+1}\to C_n&lt;/script&gt;, given by taking the boundaries of our manifolds &lt;script type=&quot;math/tex&quot;&gt;Y&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Secondly, there is the de Rham functor &lt;script type=&quot;math/tex&quot;&gt;\Omega_X\colon\mathbb{N}\to\mathsf{Vect}_\mathbb{R}&lt;/script&gt;, which sends &lt;script type=&quot;math/tex&quot;&gt;n\in\mathbb{N}&lt;/script&gt; to the space &lt;script type=&quot;math/tex&quot;&gt;\Omega_X^n&lt;/script&gt; of smooth &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;-forms on &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt;, and sends &lt;script type=&quot;math/tex&quot;&gt;n\to n+1&lt;/script&gt; to the exterior derivative &lt;script type=&quot;math/tex&quot;&gt;\mathrm{d}\colon\Omega_X^n\to\Omega_X^{n+1}&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Now we use the usual tensor product on &lt;script type=&quot;math/tex&quot;&gt;\mathsf{Vect}_\mathbb{R}&lt;/script&gt; to get a functor&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;C^X\otimes\Omega_X\colon\mathbb{N}\times\mathbb{N}^\mathrm{op}\to\mathsf{Vect}_\mathbb{R}.&lt;/script&gt;

&lt;p&gt;We claim that we can make &lt;script type=&quot;math/tex&quot;&gt;C^X\otimes\Omega_X\to\mathbb{R}&lt;/script&gt; into a &lt;strong&gt;cowedge&lt;/strong&gt;, i.e. that, for all &lt;script type=&quot;math/tex&quot;&gt;n\in\mathbb{N}&lt;/script&gt;, we can find morphisms &lt;script type=&quot;math/tex&quot;&gt;w_n\colon C_n^X\otimes\Omega_X^n\to\mathbb{R}&lt;/script&gt; such that, for any &lt;script type=&quot;math/tex&quot;&gt;f\colon m\to n&lt;/script&gt; (and here we can restrict to &lt;script type=&quot;math/tex&quot;&gt;m\to m+1&lt;/script&gt;, since these are the morphisms in &lt;script type=&quot;math/tex&quot;&gt;\mathbb{N}&lt;/script&gt; that generate all the others (that aren’t the identity)), the square&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{array}{ccc}
    C_{m+1}^X\otimes\Omega_X^m &amp; \xrightarrow{\partial\,\otimes\,1} &amp; C_m^X\otimes\Omega_X^m\\
    {\scriptstyle 1\,\otimes\,\mathrm{d}}\bigg\downarrow &amp;&amp; \bigg\downarrow{\scriptstyle w_m}\\
    C_{m+1}^X\otimes\Omega_X^{m+1} &amp; \xrightarrow{w_{m+1}} &amp; \mathbb{R}
\end{array} %]]&gt;&lt;/script&gt;

&lt;p&gt;commutes.&lt;/p&gt;

&lt;p&gt;The surprising fact, then, is that Stokes’ theorem tells us that taking &lt;script type=&quot;math/tex&quot;&gt;w_n&lt;/script&gt; to be defined by&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\int\colon(\varphi\colon Y\to X)\otimes\omega \mapsto \int_Y \varphi^*\omega&lt;/script&gt;

&lt;p&gt;gives us exactly what we want. Indeed, Stokes’ theorem (in some form) says that&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\int_{\partial Z}\tau=\int_Z \mathrm{d}\tau&lt;/script&gt;

&lt;p&gt;and, since pullbacks commute with &lt;script type=&quot;math/tex&quot;&gt;\mathrm{d}&lt;/script&gt;, when we replace &lt;script type=&quot;math/tex&quot;&gt;\tau&lt;/script&gt; with &lt;script type=&quot;math/tex&quot;&gt;\varphi^*\omega&lt;/script&gt;, we get that the above square commutes. Neat!&lt;/p&gt;

&lt;p&gt;What is not entirely clear to me, however, is if this is really a fact about &lt;em&gt;coends&lt;/em&gt;, since then we would need to show that this cowedge is universal. This is something for me to think about the next time I’m bored on the tram.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;All in all, this is a bit similar to an abstract version of de Rham’s theorem, which says that the above integration map (when we replace &lt;script type=&quot;math/tex&quot;&gt;C_n&lt;/script&gt; by &lt;em&gt;singular&lt;/em&gt; cochains) is a quasi-isomorphism, and the commuting square sort of encodes the fact that integration respects the differentials of the two complexes. (This is what &lt;a href=&quot;https://twitter.com/littmath&quot;&gt;Daniel Litt&lt;/a&gt; pointed out &lt;a href=&quot;https://twitter.com/littmath/status/1169081052100530177&quot;&gt;in a reply&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;One other question that I do have is the following: is there something to be gained by writing &lt;script type=&quot;math/tex&quot;&gt;C_X&lt;/script&gt; as the functor represented by &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt;, and using the coend version of the Yoneda lemma? I don’t know, but would love to find out!&lt;/p&gt;</content><author><name></name></author><category term="blog" /><category term="category-theory" /><summary type="html">For category theorists, the idea that “everything is a Kan extension” is a familiar one, as is the slightly more abstract version “everything is a (co)end”. For differential geometers, the idea that “everything is Stokes’ theorem” is sort of the equivalent adage. In an entirely typical turn of events, it seems that these two seemingly unrelated aphorisms can be linked together, as I found out today on Twitter.</summary></entry><entry><title type="html">Mathematical motivation and meagre contributions</title><link href="https://thosgood.github.io/blog/2019/08/14/mathematical-motivation-meagre-contributions.html" rel="alternate" type="text/html" title="Mathematical motivation and meagre contributions" /><published>2019-08-14T00:00:00+00:00</published><updated>2019-08-14T00:00:00+00:00</updated><id>https://thosgood.github.io/blog/2019/08/14/mathematical-motivation-meagre-contributions</id><content type="html" xml:base="https://thosgood.github.io/blog/2019/08/14/mathematical-motivation-meagre-contributions.html">&lt;p&gt;I find myself in a mathematical rut more often than I would like. It is very easy, especially as a PhD student, I think, to become disillusioned with maths, the work that one can do, and academia as a whole. I realised only the other day, after talking to my family, some of the things that can contribute towards this. Hopefully this post can serve as a reminder to myself that I am human being who is trying to be a mathematician, and not the other way around.&lt;/p&gt;

&lt;!--more--&gt;
&lt;hr /&gt;

&lt;p&gt;These days, living abroad (away from friends and family), most of my social interactions take place with other mathematicians. This is great, because I do love talking about maths, but also has a rather negative effect. Namely, every single person in my office already has a PhD. Because of this, it’s very easy to feel like I know absolutely nothing about maths. Combine this with the typical thésard problem of “my thesis just has trivial results but even so my proofs are incomplete and bad”, reading things written by the geniuses of your field, and throw in a dash of “so much of academia is about trying to sell your maths as having either profitable (for the few) or military applications”, and it can be hard to enjoy maths at times.&lt;/p&gt;

&lt;p&gt;By no means am I claiming to have a solution to this problem, but I have found a few things that help (some very obvious), so I thought I’d share them here for whatever small help they might be to anybody reading.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Talk to people outside of maths as much as you possibly can, especially about things that aren’t maths. Family and friends are just so important.&lt;/li&gt;
  &lt;li&gt;Don’t give up talking to mathematicians. One thing that prompted me to put down these thoughts on this blog was a &lt;a href=&quot;https://twitter.com/johncarlosbaez/status/1161454391901085696&quot;&gt;Twitter thread this morning by John Baez&lt;/a&gt; that just got me so excited about maths again. Read things outside of your current work, and try to make time for learning maths that you find irresistibly intriguing, even if it’s completely unrelated to the work you have to do.&lt;/li&gt;
  &lt;li&gt;Get involved in some community projects. I’ve been contributing to a &lt;a href=&quot;https://github.com/ryankeleti/ega&quot;&gt;translation project for Grothendieck’s EGA&lt;/a&gt; recently, and it’s been great for me personally: I can use the fact that I speak French and know enough about algebraic geometry to help make something that could hopefully help other people. I’ve also been working on &lt;a href=&quot;https://github.com/matrix-org/matrix-react-sdk/pull/3251&quot;&gt;LaTex support in riot.im&lt;/a&gt;, so that mathematicians can have an instant-messaging service, like Discord or Slack, where they can actually type how they would write: with nice maths symbols. In general, open-source projects are a great thing to get involved in.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Take up bird watching. I know that not everybody might love these feathered friends as much as I do, but I’m far from the first to have written about what a great thing it can be. It’s not like you have to do it “seriously” either: I spend a lot of time just giving names to the pigeons I see every day, and watching how they interact with each other. As one of my favourite poets, Wendy Cope, so beautifully writes:&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;&lt;em&gt;‘A great deal of anecdotal evidence suggests that we respond positively to birdsong.’&lt;/em&gt;&lt;br /&gt;
— Scientific researcher quoted in &lt;em&gt;The Daily Telegraph&lt;/em&gt; 8.2.2012.&lt;/p&gt;

      &lt;p&gt;Centuries of English verse&lt;br /&gt;
Suggest the selfsame thing:&lt;br /&gt;
A negative response is rare&lt;br /&gt;
When birds are heard to sing.&lt;br /&gt;&lt;/p&gt;

      &lt;p&gt;&lt;em&gt;What’s the use of poetry?&lt;/em&gt;&lt;br /&gt;
You ask. Well, here’s a start:&lt;br /&gt;
It’s anecdotal evidence&lt;br /&gt;
About the human heart.&lt;br /&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;As the above poem also suggests, spend time growing and learning as a human being. It’s said so often that it’s become cliché, but being a human being can be very hard. Poetry, music, books, and so on, are all ways that other human beings have tried to convey what they have themselves wanted to hear at one point or another, so listen to what they have to say. But don’t get so tied up in listening to artists that you forget to listen to everybody else.&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="blog" /><category term="category-theory" /><category term="birds" /><summary type="html">I find myself in a mathematical rut more often than I would like. It is very easy, especially as a PhD student, I think, to become disillusioned with maths, the work that one can do, and academia as a whole. I realised only the other day, after talking to my family, some of the things that can contribute towards this. Hopefully this post can serve as a reminder to myself that I am human being who is trying to be a mathematician, and not the other way around.</summary></entry><entry><title type="html">Graded homotopy structures</title><link href="https://thosgood.github.io/blog/2019/07/29/graded-homotopy-structures.html" rel="alternate" type="text/html" title="Graded homotopy structures" /><published>2019-07-29T00:00:00+00:00</published><updated>2019-07-29T00:00:00+00:00</updated><id>https://thosgood.github.io/blog/2019/07/29/graded-homotopy-structures</id><content type="html" xml:base="https://thosgood.github.io/blog/2019/07/29/graded-homotopy-structures.html">&lt;p&gt;As I mentioned in &lt;a href=&quot;/blog/2019/07/26/twisting-cochains-and-twisted-complexes.html&quot;&gt;the previous post&lt;/a&gt;, I recently saw a talk by &lt;a href=&quot;http://math.ucalgary.ca/math_unitis/profiles/1-7046986&quot;&gt;Rachel Hardeman&lt;/a&gt; on the A-homotopy theory of graphs, and it really intrigued me. In particular, it seemed to me that there was some nice structure that could be abstractified: that of a “graded homotopy structure”, as I’ve been calling it in my head. Rather than trying to type out everything in &lt;a href=&quot;https://www.matrix.to/#/#math.CT:matrix.org&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#math.CT:matrix.org&lt;/code&gt;&lt;/a&gt;, I’ve decided to post it here, in the hope that I might be able to get some answers.&lt;/p&gt;

&lt;!--more--&gt;
&lt;hr /&gt;

&lt;p&gt;The main reference is [RH19] Rachel Hardeman. &lt;em&gt;Computing A-homotopy groups using coverings and lifting properties&lt;/em&gt;. &lt;a href=&quot;https://arxiv.org/abs/1904.12065&quot;&gt;arXiv: 1904.12065&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;preliminaries&quot;&gt;Preliminaries&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Graphs &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; consist of &lt;em&gt;vertices&lt;/em&gt; &lt;script type=&quot;math/tex&quot;&gt;V(G)&lt;/script&gt; and &lt;em&gt;edges&lt;/em&gt; &lt;script type=&quot;math/tex&quot;&gt;E(G)&lt;/script&gt;, where we write the edge between vertices &lt;script type=&quot;math/tex&quot;&gt;s&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt; as &lt;script type=&quot;math/tex&quot;&gt;[s,t]&lt;/script&gt;. All graphs are assumed to be &lt;em&gt;simple&lt;/em&gt; (no multiple edges between any two points or loops on a single point) and have a &lt;em&gt;distinguished vertex&lt;/em&gt; &lt;script type=&quot;math/tex&quot;&gt;x\in V(G)&lt;/script&gt;. We write &lt;script type=&quot;math/tex&quot;&gt;(G,x)&lt;/script&gt; to mean the graph along with its distinguished vertex.&lt;/li&gt;
  &lt;li&gt;A &lt;em&gt;(weak) graph homomorphism&lt;/em&gt; &lt;script type=&quot;math/tex&quot;&gt;\varphi\colon (G,x)\to(H,y)&lt;/script&gt; is a map of sets &lt;script type=&quot;math/tex&quot;&gt;V(G)\to V(H)&lt;/script&gt; such that, for all &lt;script type=&quot;math/tex&quot;&gt;[s,t]\in E(G)&lt;/script&gt;, either &lt;script type=&quot;math/tex&quot;&gt;\varphi(s)=\varphi(t)&lt;/script&gt; or &lt;script type=&quot;math/tex&quot;&gt;[\varphi(s),\varphi(t)]\in E(H)&lt;/script&gt;. It is said to be &lt;em&gt;based&lt;/em&gt; if &lt;script type=&quot;math/tex&quot;&gt;\varphi(x)=y&lt;/script&gt;.&lt;/li&gt;
  &lt;li&gt;The &lt;em&gt;cartesian product&lt;/em&gt; &lt;script type=&quot;math/tex&quot;&gt;G\mathbin{\square} H&lt;/script&gt; of the graphs &lt;script type=&quot;math/tex&quot;&gt;(G,x)&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;(H,y)&lt;/script&gt; is the graph with vertex set &lt;script type=&quot;math/tex&quot;&gt;V(G)\times V(H)&lt;/script&gt;, with distinguished vertex &lt;script type=&quot;math/tex&quot;&gt;(x,y)&lt;/script&gt;, and with an edge between &lt;script type=&quot;math/tex&quot;&gt;(s,u)&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;(t,v)&lt;/script&gt; whenever
    &lt;ul&gt;
      &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;s=t&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;[u,v]\in E(H)&lt;/script&gt;; or&lt;/li&gt;
      &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;u=v&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;[s,t]\in E(G)&lt;/script&gt;.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The &lt;em&gt;path of length &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;&lt;/em&gt;, denoted by &lt;script type=&quot;math/tex&quot;&gt;I_n&lt;/script&gt;, is the graph with vertices labelled from &lt;script type=&quot;math/tex&quot;&gt;0&lt;/script&gt; to &lt;script type=&quot;math/tex&quot;&gt;n\in\mathbb{N}&lt;/script&gt;, and edges &lt;script type=&quot;math/tex&quot;&gt;[i,i+1]&lt;/script&gt; for &lt;script type=&quot;math/tex&quot;&gt;i=0,\ldots,n-1&lt;/script&gt;. The &lt;em&gt;path of infinite length&lt;/em&gt;, denoted by &lt;script type=&quot;math/tex&quot;&gt;I_\infty&lt;/script&gt;, has vertices labelled by &lt;script type=&quot;math/tex&quot;&gt;\mathbb{Z}&lt;/script&gt;.&lt;/li&gt;
  &lt;li&gt;We say that two graphs homomorphisms &lt;script type=&quot;math/tex&quot;&gt;\varphi,\psi\colon(G,x)\to(H,y)&lt;/script&gt; are &lt;em&gt;A-homotopic&lt;/em&gt;, written &lt;script type=&quot;math/tex&quot;&gt;\varphi\simeq_A\psi&lt;/script&gt;, if there exists some &lt;script type=&quot;math/tex&quot;&gt;n\in\mathbb{N}&lt;/script&gt; and a graph homomorphism &lt;script type=&quot;math/tex&quot;&gt;h\colon G\mathbin{\square} I_n\to H&lt;/script&gt; such that
    &lt;ul&gt;
      &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;h(s,0) = \varphi(s)&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;s\in V(G)&lt;/script&gt;;&lt;/li&gt;
      &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;h(s,n) = \psi(s)&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;s\in V(G)&lt;/script&gt;; and&lt;/li&gt;
      &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;h(x,i)=y&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;0\leqslant i\leqslant n&lt;/script&gt;.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;We say that two graphs &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;H&lt;/script&gt; are &lt;em&gt;A-homotopic&lt;/em&gt; if there exist graph homomorphisms &lt;script type=&quot;math/tex&quot;&gt;\varphi\colon G\to H&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\psi\colon H\to G&lt;/script&gt; such that &lt;script type=&quot;math/tex&quot;&gt;\psi\circ\varphi\simeq_A\operatorname{id}_G&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\varphi\circ\psi\simeq_A\operatorname{id}_H&lt;/script&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;N.B.&lt;/strong&gt; A-homotopy theory is possibly very different from what you might, at a quick first glance, expect. For example, any two cyclic graphs &lt;script type=&quot;math/tex&quot;&gt;C_n&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;C_m&lt;/script&gt; (for &lt;script type=&quot;math/tex&quot;&gt;m,n\geqslant 3&lt;/script&gt;) are A-homotopic if and only if &lt;script type=&quot;math/tex&quot;&gt;m=n&lt;/script&gt;, and &lt;script type=&quot;math/tex&quot;&gt;C_n&lt;/script&gt; is contractible (i.e. homotopic to the graph with a single point and no edges) for &lt;script type=&quot;math/tex&quot;&gt;n=3,4&lt;/script&gt;, but not for any &lt;script type=&quot;math/tex&quot;&gt;n\geqslant 5&lt;/script&gt;.&lt;/li&gt;
  &lt;li&gt;The &lt;em&gt;A-homotopic fundamental group&lt;/em&gt; of a graph can be defined, as well as a simplicial structure on the group of cochains, and all this sort of stuff. This (amongst other nice formalisations that we would hope for) is done in [RH19].&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;graded-homotopy-structure&quot;&gt;“Graded homotopy” structure&lt;/h3&gt;

&lt;p&gt;Given two A-homotopic graph homomorphisms &lt;script type=&quot;math/tex&quot;&gt;\varphi\simeq_A\psi&lt;/script&gt; we can ask for the &lt;em&gt;minimal&lt;/em&gt; such &lt;script type=&quot;math/tex&quot;&gt;n\in\mathbb{N}&lt;/script&gt; in the definition of the A-homotopy. We then say that the A-homotopy is an &lt;em&gt;&lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;-homotopy&lt;/em&gt;, and we extend this definition slightly to allow for the fact that we can trivially consider an &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;-homotopy as an &lt;script type=&quot;math/tex&quot;&gt;(n+1)&lt;/script&gt;-homotopy (in &lt;script type=&quot;math/tex&quot;&gt;n+1&lt;/script&gt; various ways, corresponding to the classical idea of simplicial (co)face/(co)degeneracy (depending on your choice of nomenclature) maps). That is, we say &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;-homotopic to mean “&lt;script type=&quot;math/tex&quot;&gt;m&lt;/script&gt;-homotopic with &lt;script type=&quot;math/tex&quot;&gt;m\leqslant n&lt;/script&gt;”.&lt;/p&gt;

&lt;p&gt;We say that two graphs &lt;script type=&quot;math/tex&quot;&gt;G,H&lt;/script&gt; are &lt;em&gt;&lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;-homotopic&lt;/em&gt; if there exist graph homomorphisms &lt;script type=&quot;math/tex&quot;&gt;\varphi\colon G\to H&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\psi\colon H\to G&lt;/script&gt; such that &lt;script type=&quot;math/tex&quot;&gt;\psi\circ\varphi&lt;/script&gt; is &lt;script type=&quot;math/tex&quot;&gt;m_1&lt;/script&gt;-homotopic to &lt;script type=&quot;math/tex&quot;&gt;\operatorname{id}_G&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\varphi\circ\psi&lt;/script&gt; is &lt;script type=&quot;math/tex&quot;&gt;m_2&lt;/script&gt;-homotopic to &lt;script type=&quot;math/tex&quot;&gt;\operatorname{id}_H&lt;/script&gt;, with &lt;script type=&quot;math/tex&quot;&gt;\operatorname{max}\{m_1,m_2\}=n&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Then we can consider the category &lt;script type=&quot;math/tex&quot;&gt;\mathsf{Grph}_n&lt;/script&gt;, which has objects being equivalence classes of &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;-homotopic graphs, and morphisms being equivalence classes of &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;-homotopic graph homomorphisms. This gives us the following structure:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;\mathsf{Grph}_0 = \mathsf{Grph}&lt;/script&gt;;&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;\mathsf{Grph}_\infty = \mathrm{Ho}(\mathsf{Grph})&lt;/script&gt;;&lt;/li&gt;
  &lt;li&gt;functors &lt;script type=&quot;math/tex&quot;&gt;\mathsf{Grph}_n \to \mathsf{Grph}_{n+1}&lt;/script&gt; that are surjective on objects, where functoriality relies on the fact that &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;-homotopies can be considered as &lt;script type=&quot;math/tex&quot;&gt;(n+1)&lt;/script&gt;-homotopies.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can think of the number &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; as some sort of “complexity” of the homotopy: small &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; correspond to “homotopies that can be performed in a few steps” (here it is a good idea to see some of the examples in [RH19] to get an idea of how graph homotopies behave).&lt;/p&gt;

&lt;h3 id=&quot;questions&quot;&gt;Questions&lt;/h3&gt;

&lt;p&gt;If anybody has any answers to, or comments about, the following questions (or this post in general) then please don’t hesitate to get in touch!&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;What is this structure? Some sort of enrichment? Does it already have a name?&lt;/li&gt;
  &lt;li&gt;What other examples exist? For example, it would be nice to get something similar for the category of chain complexes of an abelian category, but I see no way a priori of assigning “complexity” to a homotopy for an arbitrary choice of abelian category. If things are enriched over metric spaces, however, then this is a different story…&lt;/li&gt;
  &lt;li&gt;It seems believable that we could define something analogous with &lt;script type=&quot;math/tex&quot;&gt;\mathbb{R}^{\geqslant0}&lt;/script&gt; instead of &lt;script type=&quot;math/tex&quot;&gt;\mathbb{N}&lt;/script&gt;. Could we do so for arbitrary (bounded-below) posets?&lt;/li&gt;
  &lt;li&gt;Does this tie in to the idea of “approximate composition” (c.f. &lt;a href=&quot;http://www.cs.ox.ac.uk/ACT2019/preproceedings/Walter%20Tholen%20Approximate%20composition%20(revised).pdf&quot;&gt;Walter Tholen’s talk on metagories at ACT2019&lt;/a&gt;).&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="blog" /><category term="homotopy-theory" /><category term="category-theory" /><category term="questions" /><summary type="html">As I mentioned in the previous post, I recently saw a talk by Rachel Hardeman on the A-homotopy theory of graphs, and it really intrigued me. In particular, it seemed to me that there was some nice structure that could be abstractified: that of a “graded homotopy structure”, as I’ve been calling it in my head. Rather than trying to type out everything in #math.CT:matrix.org, I’ve decided to post it here, in the hope that I might be able to get some answers.</summary></entry><entry><title type="html">Twisting cochains and twisted complexes</title><link href="https://thosgood.github.io/blog/2019/07/26/twisting-cochains-and-twisted-complexes.html" rel="alternate" type="text/html" title="Twisting cochains and twisted complexes" /><published>2019-07-26T00:00:00+00:00</published><updated>2019-07-26T00:00:00+00:00</updated><id>https://thosgood.github.io/blog/2019/07/26/twisting-cochains-and-twisted-complexes</id><content type="html" xml:base="https://thosgood.github.io/blog/2019/07/26/twisting-cochains-and-twisted-complexes.html">&lt;p&gt;This week was the &lt;a href=&quot;https://ytm2019.epfl.ch&quot;&gt;Young Topologists Meeting&lt;/a&gt; at EPFL in Lausanne, and had courses by Julie Bergner (on 1- and 2-Segal spaces) and Vidit Nanda (on the topology of data), as well as a bunch of great talks by various postdocs and PhD students. I was lucky enough to get the chance to talk about twisting cochains and twisted complexes for half an hour, and you can find the slides on my GitHub &lt;a href=&quot;https://github.com/thosgood/papers/blob/master/twisting-cochains-YTM19/twisting-cochains-YTM19-handout.pdf&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;
&lt;hr /&gt;

&lt;p&gt;One talk that I really liked was &lt;a href=&quot;http://math.ucalgary.ca/math_unitis/profiles/1-7046986&quot;&gt;Rachel Hardeman&lt;/a&gt;’s introduction to A-homotopy theory, which is a really interesting way of describing the homotopy of graphs — whereas, with classical homotopy theory, all cyclic graphs are equivalent, in A-homotopy theory, you can distinguish between them. In particular, &lt;script type=&quot;math/tex&quot;&gt;C_n&lt;/script&gt; is only contractible for &lt;script type=&quot;math/tex&quot;&gt;n\leqslant4&lt;/script&gt;. You can read more about this in &lt;a href=&quot;https://arxiv.org/abs/1904.12065&quot;&gt;her paper on the arXiv&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also really great one was &lt;a href=&quot;http://pi.math.cornell.edu/~maru/index.html&quot;&gt;Maru Sarazola&lt;/a&gt;’s talk on constructing model and Waldhausen category structures via cotorsion pairs: a method that lets you get model structures on abelian categories that play nicely with all the abelian structure, but where you have some freedom to choose the morphisms that you want to be weak equivalences. I don’t think she currently has notes for this stuff typed up anywhere, but (from what I gather) it’s in the works!&lt;/p&gt;</content><author><name></name></author><category term="blog" /><category term="differential-geometry" /><category term="complex-geometry" /><category term="algebraic-topology" /><category term="category-theory" /><category term="homotopy-theory" /><summary type="html">This week was the Young Topologists Meeting at EPFL in Lausanne, and had courses by Julie Bergner (on 1- and 2-Segal spaces) and Vidit Nanda (on the topology of data), as well as a bunch of great talks by various postdocs and PhD students. I was lucky enough to get the chance to talk about twisting cochains and twisted complexes for half an hour, and you can find the slides on my GitHub here.</summary></entry><entry><title type="html">More-than-one-but-less-than-three-categories</title><link href="https://thosgood.github.io/blog/2019/07/15/more-than-one-less-than-three.html" rel="alternate" type="text/html" title="More-than-one-but-less-than-three-categories" /><published>2019-07-15T00:00:00+00:00</published><updated>2019-07-15T00:00:00+00:00</updated><id>https://thosgood.github.io/blog/2019/07/15/more-than-one-less-than-three</id><content type="html" xml:base="https://thosgood.github.io/blog/2019/07/15/more-than-one-less-than-three.html">&lt;p&gt;What with all the wild applications of, and progress in, the theory of &lt;script type=&quot;math/tex&quot;&gt;\infty&lt;/script&gt;-categories, I had really neglected studying any kind of lower higher-category theory.
But, as in many other ways, CT2019 opened my eyes somewhat, and now I’m trying to catch up on the theory of 2-categories, which have some really beautiful structure and examples.&lt;/p&gt;

&lt;!--more--&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;background-and-strictification&quot;&gt;Background and strictification&lt;/h2&gt;

&lt;p&gt;Before I get to the point of this post (which is to help me to remember the differences between 2-categories, bicategories, and double categories&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;), I’ll just say a tiny bit about why I’m an idiot.&lt;/p&gt;

&lt;p&gt;In some sense I had just assumed that 2-categories were kind of uninteresting, for two reasons: firstly, “they’re just &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;-categories with &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;=2”; and secondly, every weak 2-category can be strictified, so we can just always take strict models and everything works out just nicely.
Both of these things are rather bad points of view to take.&lt;/p&gt;

&lt;p&gt;For the latter point, it’s important to note that, yes, weak 2-categories can be strictified, and every pseudofunctor is equivalent to a strict one, but it is &lt;strong&gt;not&lt;/strong&gt; true that every pseudonatural transformation is equivalent to a (strict) natural transformation.&lt;/p&gt;

&lt;p&gt;As explained in &lt;a href=&quot;http://conferences.inf.ed.ac.uk/ct2019/slides/shulman.pdf&quot;&gt;Mike Shulman’s talk&lt;/a&gt;, working in the &lt;script type=&quot;math/tex&quot;&gt;(2,1)&lt;/script&gt;-topos &lt;script type=&quot;math/tex&quot;&gt;[\mathbb{D}^{\text{op}},\mathsf{Gpd}]&lt;/script&gt;, every pseudofunctor &lt;script type=&quot;math/tex&quot;&gt;X\colon\mathbb{D}^{\text{op}}\to\mathsf{Gpd}&lt;/script&gt; is equivalent to a strict one, but &lt;strong&gt;not&lt;/strong&gt; every pseudonatural transformation &lt;script type=&quot;math/tex&quot;&gt;X\rightsquigarrow Y&lt;/script&gt; is equivalent to a strict one.
But we do have the following lemma (from Mike’s talk).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lemma.&lt;/strong&gt; For any &lt;script type=&quot;math/tex&quot;&gt;Y\in[\mathbb{D}^{\text{op}},\mathsf{Gpd}]&lt;/script&gt; there is a strict &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}^{\mathbb{D}}Y&lt;/script&gt; and a bijection between pseudonatural &lt;script type=&quot;math/tex&quot;&gt;X\rightsquigarrow Y&lt;/script&gt; and strict &lt;script type=&quot;math/tex&quot;&gt;X\to\mathcal{C}^{\mathbb{D}}Y&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;. Almost by definition: a pseudonatural &lt;script type=&quot;math/tex&quot;&gt;X\rightsquigarrow Y&lt;/script&gt; assigns to each &lt;script type=&quot;math/tex&quot;&gt;x\in X(d)&lt;/script&gt; some image &lt;script type=&quot;math/tex&quot;&gt;f_x(x)\in Y(d)&lt;/script&gt; along with an isomorphism &lt;script type=&quot;math/tex&quot;&gt;\gamma^*(f_x(x))\cong f_{x'}(\gamma^*(x))&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;\gamma\colon x\to x'&lt;/script&gt; in &lt;script type=&quot;math/tex&quot;&gt;\mathbb{D}&lt;/script&gt;, and this isomorphism satisfies a coherence condition.
So we just define &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}^{\mathbb{D}}Y(d)&lt;/script&gt; to consist of all this data.&lt;/p&gt;

&lt;p&gt;There is then a lovely theory of &lt;em&gt;coflexible&lt;/em&gt; objects, which are those &lt;script type=&quot;math/tex&quot;&gt;Y&lt;/script&gt; such that the canonical morphism &lt;script type=&quot;math/tex&quot;&gt;Y\to\mathcal{C}^{\mathbb{D}}Y&lt;/script&gt; has a strict retraction.
These objects are such that &lt;strong&gt;all&lt;/strong&gt; pseudonatural transformations &lt;em&gt;into&lt;/em&gt; them are isomorphic to &lt;em&gt;strict&lt;/em&gt; such ones.&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-idea&quot;&gt;The idea&lt;/h2&gt;

&lt;h3 id=&quot;roughly&quot;&gt;Roughly&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;A 2-category should be something which has &lt;em&gt;objects&lt;/em&gt;, &lt;em&gt;1-morphisms&lt;/em&gt; between the objects, and &lt;em&gt;2-morphisms&lt;/em&gt; between the morphisms.&lt;/li&gt;
  &lt;li&gt;We should be able to compose 1-morphisms ‘along objects’, in that, given 1-morphisms &lt;script type=&quot;math/tex&quot;&gt;f\colon x\to y&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;g\colon y\to z&lt;/script&gt;, we should get some 1-morphism &lt;script type=&quot;math/tex&quot;&gt;g\circ f\colon x\to z&lt;/script&gt;.&lt;/li&gt;
  &lt;li&gt;We should be able to compose 2-morphisms ‘along objects’ (so-called &lt;em&gt;horizontally&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/post-images/2019-07-15-horizontal-2-composition.png&quot; alt=&quot;horizontal composition&quot; class=&quot;centred&quot; /&gt;&lt;/p&gt;

&lt;p&gt;but &lt;em&gt;also&lt;/em&gt; ‘along 1-morphisms’ (so-called &lt;em&gt;vertically&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/post-images/2019-07-15-vertical-2-composition.png&quot; alt=&quot;vertical composition&quot; class=&quot;centred&quot; /&gt;&lt;/p&gt;

&lt;p&gt;and we ask that both senses of composition be associative &lt;em&gt;only up to coherent associator 2-morphisms&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;categorification-and-monoidal-delooping&quot;&gt;Categorification and monoidal delooping&lt;/h3&gt;

&lt;p&gt;An &lt;script type=&quot;math/tex&quot;&gt;(n=2)&lt;/script&gt;-category can be thought of as the Oidification (or &lt;a href=&quot;https://ncatlab.org/nlab/show/horizontal+categorification&quot;&gt;horizontal categorification&lt;/a&gt;) of a monoidal category: it is like a monoidal category with many objects.
To see this, note that the delooping of a monoidal category (i.e. the category where we shift all objects/morphisms ‘up one degree’) is exactly a one object &lt;script type=&quot;math/tex&quot;&gt;(n=2)&lt;/script&gt;-category, with 1-morphisms corresponding to the objects of the monoidal category, and 2-morphisms corresponding to the morphisms of the monoidal category.&lt;/p&gt;

&lt;h2 id=&quot;strict-vs-weak&quot;&gt;Strict vs. weak&lt;/h2&gt;

&lt;h3 id=&quot;the-categories&quot;&gt;The categories&lt;/h3&gt;

&lt;p&gt;The general consensus is to call &lt;em&gt;strict&lt;/em&gt; 2-categories “&lt;strong&gt;2-categories&lt;/strong&gt;”, and the algebraic notion of &lt;em&gt;weak&lt;/em&gt; 2-categories “&lt;strong&gt;bicategories&lt;/strong&gt;”.
This can be confusing, &lt;a href=&quot;https://ncatlab.org/nlab/show/bicategory#terminology&quot;&gt;for a few reasons&lt;/a&gt;, but such is life.
From now on, in this post, we will say &lt;strong&gt;&lt;script type=&quot;math/tex&quot;&gt;(n=2)&lt;/script&gt;-categories&lt;/strong&gt; to talk about both senses of 2-categories.&lt;/p&gt;

&lt;p&gt;Specifically, a &lt;em&gt;2-category&lt;/em&gt; is a category enriched over the cartesian monoidal category &lt;script type=&quot;math/tex&quot;&gt;\mathsf{Cat}&lt;/script&gt;; a &lt;em&gt;bicategory&lt;/em&gt; is a category &lt;strong&gt;weakly&lt;/strong&gt; enriched over &lt;script type=&quot;math/tex&quot;&gt;\mathsf{Cat}&lt;/script&gt; (so the hom-objects are categories but the associativity and unit laws only hold up to coherent isomorphism).&lt;/p&gt;

&lt;h3 id=&quot;the-functors&quot;&gt;The functors&lt;/h3&gt;

&lt;p&gt;Whether we take strict or weak &lt;script type=&quot;math/tex&quot;&gt;(n=2)&lt;/script&gt;-categories, we can still choose whether we want our &lt;script type=&quot;math/tex&quot;&gt;(n=2)&lt;/script&gt;-functors to be strict or weak.&lt;/p&gt;

&lt;p&gt;A &lt;em&gt;2-functor&lt;/em&gt; is a strict &lt;script type=&quot;math/tex&quot;&gt;(n=2)&lt;/script&gt;-functor (which &lt;a href=&quot;https://www.ncatlab.org/nlab/show/2-functor#fn:1&quot;&gt;usually&lt;/a&gt; only makes sense between 2-categories); a &lt;em&gt;pseudofunctor&lt;/em&gt; is a weak &lt;script type=&quot;math/tex&quot;&gt;(n=2)&lt;/script&gt;-functor (so the composition of 1-morphisms is preserved only up to coherent (specified) 2-isomorphisms, and similarly for the identity 1-morphisms) (which can be between strict or weak &lt;script type=&quot;math/tex&quot;&gt;(n=2)&lt;/script&gt;-categories).&lt;/p&gt;

&lt;p&gt;If we forget the 2-structure of an &lt;script type=&quot;math/tex&quot;&gt;(n=2)&lt;/script&gt;-category and consider the hom-categories as discrete, then both of these notions of &lt;script type=&quot;math/tex&quot;&gt;(n=2)&lt;/script&gt;-functors reduce to 1-functors between 1-categories.
There is, however, an even weaker type of &lt;script type=&quot;math/tex&quot;&gt;(n=2)&lt;/script&gt;-functor for which this is &lt;strong&gt;not&lt;/strong&gt; the case: a(n) &lt;em&gt;(op)lax 2-functor&lt;/em&gt;: here the associator and compositor 2-cells are &lt;strong&gt;not&lt;/strong&gt; required to even be coherent &lt;em&gt;isomorphisms&lt;/em&gt;, but instead just coherent &lt;em&gt;morphisms&lt;/em&gt;, in some direction (with one direction corresponding to lax and the other to oplax).
This is exactly the idea of an (op)lax functor of monoidal categories, and so reassures us that &lt;script type=&quot;math/tex&quot;&gt;(n=2)&lt;/script&gt;-categories can be thought of as monoidal categories with multiple objects, as mentioned above.&lt;/p&gt;

&lt;p&gt;That is,&lt;/p&gt;

&lt;table class=&quot;bordered-table&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;script type=&quot;math/tex&quot;&gt;(n=2)&lt;/script&gt;-functor&lt;/th&gt;
      &lt;th&gt;compositor&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;2-functor&lt;/td&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;F(g\circ f)=F(g)\circ F(f)&lt;/script&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;pseudofunctor&lt;/td&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;F(g\circ f)\cong F(g)\circ F(f)&lt;/script&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(op)lax 2-functor&lt;/td&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;F(g\circ f)\Rightarrow F(g)\circ F(f)&lt;/script&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;At a first glance, (op)-lax functors seem like almost too weak to be useful, but there are &lt;a href=&quot;https://www.ncatlab.org/nlab/show/lax+functor#examples&quot;&gt;many nice examples&lt;/a&gt; of when they are good things to study.&lt;/p&gt;

&lt;h2 id=&quot;double-categories&quot;&gt;Double categories&lt;/h2&gt;

&lt;p&gt;Something that looks a bit like an &lt;script type=&quot;math/tex&quot;&gt;(n=2)&lt;/script&gt;-category when you unwrap the abstract definition is a &lt;em&gt;double category&lt;/em&gt;: an internal category &lt;script type=&quot;math/tex&quot;&gt;\mathscr{C}=(\mathcal{C}_1\rightrightarrows\mathcal{C}_0)&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;\mathsf{Cat}&lt;/script&gt;.
This means that it has&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;objects&lt;/em&gt;, given by the objects of &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}_0&lt;/script&gt;;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;vertical morphisms&lt;/em&gt;, given by the morphisms of &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}_0&lt;/script&gt;;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;horizontal morphisms&lt;/em&gt;, given by the objects of &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}_1&lt;/script&gt;; and&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;2-cells&lt;/em&gt;, or &lt;em&gt;squares&lt;/em&gt;, given by the morphisms of &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}_1&lt;/script&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can picture the 2-cells as a square (hence the name), as&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/post-images/2019-07-15-double-square.png&quot; alt=&quot;squares&quot; class=&quot;centred&quot; /&gt;&lt;/p&gt;

&lt;p&gt;where &lt;script type=&quot;math/tex&quot;&gt;x_0,x_1,y_0,y_1\in\operatorname{ob}\mathcal{C}_0&lt;/script&gt; are objects, &lt;script type=&quot;math/tex&quot;&gt;f,g\in\operatorname{ob}\mathcal{C}_1&lt;/script&gt; are horizontal morphisms, &lt;script type=&quot;math/tex&quot;&gt;\alpha\beta\in\operatorname{Arr}\mathcal{C}_0&lt;/script&gt; are vertical morphisms, and &lt;script type=&quot;math/tex&quot;&gt;\phi\in\operatorname{Arr}\mathcal{C}_1&lt;/script&gt; is the 2-cell.&lt;/p&gt;

&lt;p&gt;Composition ‘horizontally’ of two squares, left and right of each other, is given by the usual composition in the categories &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}_0&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}_1&lt;/script&gt;; composition ‘vertically’ of two squares, one above the other, is given by the composition operation on &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}_1\rightrightarrows\mathcal{C}_0&lt;/script&gt;, coming from the fact that &lt;script type=&quot;math/tex&quot;&gt;\mathscr{C}&lt;/script&gt; is an internal category.&lt;/p&gt;

&lt;p&gt;There are two &lt;em&gt;edge categories&lt;/em&gt; associated to &lt;script type=&quot;math/tex&quot;&gt;\mathscr{C}&lt;/script&gt;, given by taking the objects and either the vertical or the horizontal morphisms as morphisms.
If the two edge categories agree then we say that &lt;script type=&quot;math/tex&quot;&gt;\mathscr{C}&lt;/script&gt; is &lt;em&gt;edge-symmetric&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;examples&quot;&gt;Examples&lt;/h3&gt;

&lt;p&gt;From &lt;a href=&quot;https://ncatlab.org/nlab/show/double+category#examples&quot;&gt;the nLab&lt;/a&gt;, we have some fun examples.&lt;/p&gt;

&lt;table class=&quot;bordered-table&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt;objects&lt;/th&gt;
      &lt;th&gt;vertical&lt;/th&gt;
      &lt;th&gt;horizontal&lt;/th&gt;
      &lt;th&gt;2-cells&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;\mathsf{Prof}&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt;small categories&lt;/td&gt;
      &lt;td&gt;functors&lt;/td&gt;
      &lt;td&gt;profunctors&lt;/td&gt;
      &lt;td&gt;nat. trans.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;\mathsf{Mod}&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt;model categories&lt;/td&gt;
      &lt;td&gt;left Quil. functors&lt;/td&gt;
      &lt;td&gt;right Quil. functors&lt;/td&gt;
      &lt;td&gt;nat. trans.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;\mathsf{MonCat}&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt;monoidal categories&lt;/td&gt;
      &lt;td&gt;colax mon. functors&lt;/td&gt;
      &lt;td&gt;lax mon. functors&lt;/td&gt;
      &lt;td&gt;mon. nat. trans.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;\mathsf{Dbl}\Pi(X)&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt;points of top. space &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt;paths&lt;/td&gt;
      &lt;td&gt;paths&lt;/td&gt;
      &lt;td&gt;homotopies&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;For more details about why &lt;script type=&quot;math/tex&quot;&gt;\mathsf{Mod}&lt;/script&gt; is so interesting, see [S11].&lt;/p&gt;

&lt;p&gt;Note that we can also get weak versions of double categories, in many ways, as described &lt;a href=&quot;https://ncatlab.org/nlab/show/double+category#weakenings&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;1-categories-as-2-categories-as-double-categories&quot;&gt;1-categories as 2-categories as double categories&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We can consider any 1-category as an &lt;script type=&quot;math/tex&quot;&gt;(n=2)&lt;/script&gt;-category by taking the 2-cells to just be identities.&lt;/li&gt;
  &lt;li&gt;We can consider any &lt;script type=&quot;math/tex&quot;&gt;(n=2)&lt;/script&gt;-category as an edge-symmetric double category, its &lt;em&gt;double category of squares&lt;/em&gt;, via the so-called &lt;em&gt;quintet construction&lt;/em&gt;: by taking both vertical and horizontal morphisms to be the 1-morphisms, and the 2-cells to be the 2-morphisms.
  We could also construct two other double categories: by taking either the vertical or the horizontal morphisms to be the 1-morphisms, and the other to be just the identity 1-morphisms.
  Finally, one last construction is the &lt;em&gt;mate construction&lt;/em&gt;: the vertical arrows are adjunctions, the horizontal arrows are 1-morphisms, and the 2-cells are &lt;a href=&quot;https://ncatlab.org/nlab/show/mate&quot;&gt;mate-pairs of 2-morphisms&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;In the opposite direction to the above, there are two underlying 2-categories of any double category, where we let 1-morphisms be just the vertical (resp. horizontal) morphisms, and the 2-morphisms are for commutative squares whose horizontal (resp. vertical) arrows are identities.
  We call these the &lt;em&gt;associated vertical&lt;/em&gt; (resp. &lt;em&gt;horizontal&lt;/em&gt;) &lt;em&gt;2-category&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;[S11] &lt;a href=&quot;https://arxiv.org/pdf/0706.2868.pdf&quot;&gt;Michael Shulman, &lt;em&gt;Comparing composites of left and right derived functors.&lt;/em&gt; arXiv: 0706.2868v2 [math.CT].&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h1&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;For some reason this reminds me of the confusion I always have when trying to remember what ‘biannual’ means. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;The reason that Mike talked about them was in the context of interpreting types as coflexible objects. &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><category term="blog" /><category term="category-theory" /><summary type="html">What with all the wild applications of, and progress in, the theory of -categories, I had really neglected studying any kind of lower higher-category theory. But, as in many other ways, CT2019 opened my eyes somewhat, and now I’m trying to catch up on the theory of 2-categories, which have some really beautiful structure and examples.</summary></entry><entry><title type="html">Cauchy completion and profunctors</title><link href="https://thosgood.github.io/blog/2019/07/14/cauchy-completion-and-profunctors.html" rel="alternate" type="text/html" title="Cauchy completion and profunctors" /><published>2019-07-14T00:00:00+00:00</published><updated>2019-07-14T00:00:00+00:00</updated><id>https://thosgood.github.io/blog/2019/07/14/cauchy-completion-and-profunctors</id><content type="html" xml:base="https://thosgood.github.io/blog/2019/07/14/cauchy-completion-and-profunctors.html">&lt;p&gt;An idea that came up in a few talks at CT2019 was that of ‘spans whose left leg is a left adjoint’.
I managed (luckily) to get a chance to ask Mike Shulman a few questions about this, as well as post in &lt;a href=&quot;https://www.matrix.to/#/#math.CT:matrix.org&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#math.CT:matrix.org&lt;/code&gt;&lt;/a&gt;.
What follows are some things that I learnt (mostly from [BD86]).&lt;/p&gt;

&lt;!--more--&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;bimodules&quot;&gt;Bimodules&lt;/h2&gt;

&lt;p&gt;A good place to begin is with the definition of a &lt;em&gt;bimodule&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;classically&quot;&gt;Classically&lt;/h3&gt;

&lt;p&gt;Given rings &lt;script type=&quot;math/tex&quot;&gt;R&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;S&lt;/script&gt;, we say that an abelian group &lt;script type=&quot;math/tex&quot;&gt;M&lt;/script&gt; is an &lt;em&gt;&lt;script type=&quot;math/tex&quot;&gt;(R,S)&lt;/script&gt;-bimodule&lt;/em&gt; if it is a left &lt;script type=&quot;math/tex&quot;&gt;R&lt;/script&gt;-module and a right &lt;script type=&quot;math/tex&quot;&gt;S&lt;/script&gt;-module &lt;strong&gt;in a compatible way&lt;/strong&gt;: we ask that &lt;script type=&quot;math/tex&quot;&gt;(rm)s=r(ms)&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Thinking about this definition a bit (or maybe recalling an algebra class), we see that this is equivalent to asking that &lt;script type=&quot;math/tex&quot;&gt;M&lt;/script&gt; be a right module over &lt;script type=&quot;math/tex&quot;&gt;R^{\text{op}}\otimes_{\mathbb{Z}}S&lt;/script&gt; (or, equivalently, a left module over &lt;script type=&quot;math/tex&quot;&gt;R\otimes_{\mathbb{Z}}S^{\text{op}}&lt;/script&gt;), where &lt;script type=&quot;math/tex&quot;&gt;R^{\text{op}}&lt;/script&gt; is the &lt;em&gt;opposite&lt;/em&gt; ring of &lt;script type=&quot;math/tex&quot;&gt;R&lt;/script&gt;, given by just ‘turning the multiplication around’.&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h3 id=&quot;categorically&quot;&gt;Categorically&lt;/h3&gt;

&lt;p&gt;Modulo a bunch of technical conditions on the categories involved,&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; a &lt;em&gt;bimodule&lt;/em&gt; is a &lt;script type=&quot;math/tex&quot;&gt;\mathcal{V}&lt;/script&gt;-functor (i.e. a functor of &lt;script type=&quot;math/tex&quot;&gt;\mathcal{V}&lt;/script&gt;-enriched categories) &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}^{\text{op}}\otimes\mathcal{D}\to\mathcal{V}&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;We can recover the previous definition similar to how we can recover the definition of an &lt;script type=&quot;math/tex&quot;&gt;R&lt;/script&gt;-module as an &lt;script type=&quot;math/tex&quot;&gt;\mathsf{Ab}&lt;/script&gt;-enriched functor &lt;script type=&quot;math/tex&quot;&gt;R^{\text{op}}\to\mathsf{Ab}&lt;/script&gt;. Or, taking &lt;script type=&quot;math/tex&quot;&gt;\mathcal{V}=\mathsf{Vect}&lt;/script&gt;, and &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}=\mathbb{B}A&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;\mathcal{D}=\mathbb{B}B&lt;/script&gt;, with &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;B&lt;/script&gt; both vector spaces, we recover the notion of a vector space with a left &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;-action and a right &lt;script type=&quot;math/tex&quot;&gt;B&lt;/script&gt;-action.&lt;/p&gt;

&lt;p&gt;A fundamental example that seems a bit different from this algebraic one, however, arises when we take &lt;script type=&quot;math/tex&quot;&gt;\mathcal{V}=\mathsf{Set}&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}=\mathcal{D}&lt;/script&gt; to be arbitrary (small) categories.
Then the hom functor &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}(-,-)\colon\mathcal{C}^{\text{op}}\times\mathcal{C}\to\mathsf{Set}&lt;/script&gt; is a bimodule.
This suggests that we should maybe somehow think of bimodules as generalised hom functors, where the objects can live in a different category.&lt;/p&gt;

&lt;p&gt;As a small aside, there is some hot debate about whether to use &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}^{\text{op}}\otimes\mathcal{D}\to\mathcal{V}&lt;/script&gt; or &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}\otimes\mathcal{D}^{\text{op}}\to\mathcal{V}&lt;/script&gt;, and although the first seems more natural (in that it corresponds to the way we write hom functors), the second is slightly nicer in that functors &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}\to\mathcal{D}&lt;/script&gt; give you profunctors by composition with the &lt;strong&gt;covariant&lt;/strong&gt; Yoneda embedding, as opposed to the contravariant one.
But the two are formally dual, so it’s really not the biggest of issues.&lt;/p&gt;

&lt;h2 id=&quot;profunctors-distributors-bimodules-or-whatever&quot;&gt;Profunctors, distributors, bimodules, or whatever&lt;/h2&gt;

&lt;p&gt;Of course, lots of people have different preferences for names, but a &lt;em&gt;profunctor&lt;/em&gt; is (using the convention of Borceux and Dejean) a functor &lt;script type=&quot;math/tex&quot;&gt;\mathcal{D}^{\text{op}}\times\mathcal{C}\to\mathsf{Set}&lt;/script&gt;.
People often write such a thing as &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}\nrightarrow\mathcal{D}&lt;/script&gt;.
We can define their compositions via colimits or coends:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;Q\circ P=\int^{d\in\mathcal{D}}P(d,-)\otimes Q(-,d)&lt;/script&gt;

&lt;p&gt;(although we don’t really care so much about this post).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update: we talk about this a bit more in &lt;a href=&quot;/blog/2019/09/05/day-convolution-part-3.html&quot;&gt;this post&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;yoneda&quot;&gt;Yoneda&lt;/h3&gt;

&lt;p&gt;Every functor &lt;script type=&quot;math/tex&quot;&gt;F\colon\mathcal{C}\to\mathcal{D}&lt;/script&gt; gives a profunctor &lt;script type=&quot;math/tex&quot;&gt;F^*\colon\mathcal{C}\nrightarrow\mathcal{D}&lt;/script&gt; by setting&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;F^*(d,c) = \mathcal{D}(d,Fc),&lt;/script&gt;

&lt;p&gt;and &lt;script type=&quot;math/tex&quot;&gt;F^*&lt;/script&gt; has a right adjoint &lt;script type=&quot;math/tex&quot;&gt;F_*\colon\mathcal{D}\nrightarrow\mathcal{C}&lt;/script&gt; given by&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;F_*(c,d) = \mathcal{D}(Fc,d),&lt;/script&gt;

&lt;p&gt;where we define adjunctions of profunctors using the classical notion of natural transformations.&lt;/p&gt;

&lt;p&gt;If we write &lt;script type=&quot;math/tex&quot;&gt;\mathbb{1}&lt;/script&gt; to mean the category with one object and one (identity) (endo)morphism then any (small) category &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}&lt;/script&gt; can be identified with the functor category &lt;script type=&quot;math/tex&quot;&gt;\mathsf{Fun}(\mathbb{1},\mathcal{C})&lt;/script&gt;, and the presheaf category &lt;script type=&quot;math/tex&quot;&gt;\hat{\mathcal{C}}:=\mathsf{Fun}(\mathcal{C}^{\text{op}},\mathsf{Set})&lt;/script&gt; is just the category &lt;script type=&quot;math/tex&quot;&gt;\mathsf{Profun}(\mathbb{1},\mathcal{C})&lt;/script&gt;.
Then the Yoneda embedding is the inclusion&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\mathsf{Fun}(\mathbb{1},\mathcal{C})\to\mathsf{Profun}(\mathbb{1},\mathcal{C})&lt;/script&gt;

&lt;p&gt;given by &lt;script type=&quot;math/tex&quot;&gt;F\mapsto F^*&lt;/script&gt;.&lt;/p&gt;

&lt;h3 id=&quot;recovering-functors&quot;&gt;Recovering functors&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Theorem.&lt;/strong&gt; A profunctor &lt;script type=&quot;math/tex&quot;&gt;\mathbb{1}\nrightarrow\mathcal{C}&lt;/script&gt; is a functor (via Yoneda&lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;) if and only if it admits a right adjoint.
More generally, a profunctor &lt;script type=&quot;math/tex&quot;&gt;\mathcal{A}\nrightarrow\mathcal{C}&lt;/script&gt;, for any small category &lt;script type=&quot;math/tex&quot;&gt;\mathcal{A}&lt;/script&gt;, is a functor (via Yoneda) if and only if it admits a right adjoint.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Proof.&lt;/strong&gt; [Theorem 2, BD86].&lt;/p&gt;

&lt;p&gt;We will come back to this fact later.&lt;/p&gt;

&lt;h2 id=&quot;cauchy-completion&quot;&gt;Cauchy completion&lt;/h2&gt;

&lt;p&gt;The &lt;em&gt;Cauchy completion&lt;/em&gt; of a (small) category &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}&lt;/script&gt; can be defined in many ways (as described in [BD86]), but we pick the following: the Cauchy completion of &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}&lt;/script&gt; is the full subcategory &lt;script type=&quot;math/tex&quot;&gt;\overline{\mathcal{C}}&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;\hat{\mathcal{C}}:=\mathsf{Fun}(\mathcal{C}^{\text{op}},\mathsf{Set})&lt;/script&gt; spanned by &lt;em&gt;absolutely presentable&lt;/em&gt;&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt; presheaves.&lt;/p&gt;

&lt;p&gt;The idea of Cauchy completeness for a category is in some sense meant to mirror that of Cauchy completeness of real numbers: if we think of a metric space as a category enriched over (the poset of) non-negative real numbers, then we recover this analytic notion (see [Example 3, BD86]).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lemma.&lt;/strong&gt; A presheaf &lt;script type=&quot;math/tex&quot;&gt;\mathcal{F}\in\hat{\mathcal{C}}&lt;/script&gt; is absolutely presentable if and only if it admits a right adjoint.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Proof.&lt;/strong&gt; [Propositions 2 and 4, BD86].&lt;/p&gt;

&lt;h2 id=&quot;internal-categories&quot;&gt;Internal categories&lt;/h2&gt;

&lt;p&gt;Recall that [Theorem 2, BD86] tells us that the profunctors that are functors (via Yoneda) are exactly those that admit right adjoints (which, by [Propositions 2 and 4, BD86], are exactly those (in the case where &lt;script type=&quot;math/tex&quot;&gt;\mathcal{A}=\mathbb{1}&lt;/script&gt;) that are in the Cauchy completion of &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}&lt;/script&gt;).&lt;/p&gt;

&lt;p&gt;Now for what motivated me to write this post: something I saw in &lt;a href=&quot;https://twitter.com/8ryceClarke&quot;&gt;Bryce Clarke&lt;/a&gt;’s talk &lt;a href=&quot;http://conferences.inf.ed.ac.uk/ct2019/slides/63.pdf&quot;&gt;Internal lenses as monad morphisms&lt;/a&gt; at CT2019.&lt;sup id=&quot;fnref:5&quot;&gt;&lt;a href=&quot;#fn:5&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Given some category &lt;script type=&quot;math/tex&quot;&gt;\mathcal{E}&lt;/script&gt; with pullbacks, we can define an &lt;em&gt;internal category of &lt;script type=&quot;math/tex&quot;&gt;\mathcal{E}&lt;/script&gt;&lt;/em&gt; as a monad in the 2-category &lt;script type=&quot;math/tex&quot;&gt;\mathsf{Span}(\mathcal{E})&lt;/script&gt;, but it is &lt;strong&gt;not&lt;/strong&gt; the case that internal functors are just (colax) morphisms of monads: &lt;strong&gt;we need to require that the 1-cell admits a right adjoint&lt;/strong&gt; (which reduces to asking that the left leg of the corresponding span is an identity/isomorphism).&lt;/p&gt;

&lt;p&gt;This is now not so much of a surprising condition, since we’ve already seen that this left-adjoint condition is what ensures that profunctors are actually functors!&lt;/p&gt;

&lt;p&gt;What happens then, we may well ask, if we don’t ask for this condition?
We recover the idea of a &lt;strong&gt;Mealy morphism&lt;/strong&gt;.&lt;sup id=&quot;fnref:6&quot;&gt;&lt;a href=&quot;#fn:6&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[BD86] &lt;a href=&quot;http://www.numdam.org/article/CTGDC_1986__27_2_133_0.pdf&quot;&gt;F. Borceux and D. Dejean. “Cauchy completion in category theory”. Cahiers de Topologie et Géométrie Différentielle Catégoriques, Volume 27 (1986) no. 2, pp. 133-146.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://golem.ph.utexas.edu/category/2008/08/bimodules_versus_spans.html&quot;&gt;J. Baez, &lt;em&gt;Bimodules Versus Spans&lt;/em&gt;, n-Category Café&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://arxiv.org/pdf/0706.1286.pdf&quot;&gt;M. Shulman. &lt;em&gt;Framed bicategories and monoidal fibrations.&lt;/em&gt; arXiv: 0706.1286v2 [math.CT].&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://arxiv.org/pdf/1301.3191.pdf&quot;&gt;R. Garner and M. Shulman. &lt;em&gt;Enriched categories as a free cocompletion.&lt;/em&gt; arXiV: 1301.3191v2 [math.CT].&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h1&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;x\cdot_{R^{\text{op}}}y:=y\cdot_R x&lt;/script&gt;. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;To construct &lt;script type=&quot;math/tex&quot;&gt;\mathcal{C}^{\text{op}}&lt;/script&gt; we need &lt;script type=&quot;math/tex&quot;&gt;V&lt;/script&gt; to be braided; to be able to compose bimodules we need cocompleteness of &lt;script type=&quot;math/tex&quot;&gt;V&lt;/script&gt;, with &lt;script type=&quot;math/tex&quot;&gt;\otimes&lt;/script&gt; cocontinuous in both arguments, etc. &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;That is, of the form &lt;script type=&quot;math/tex&quot;&gt;F^*&lt;/script&gt; for some functor &lt;script type=&quot;math/tex&quot;&gt;F\colon\mathcal{C}\to\mathcal{D}&lt;/script&gt;. &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;That is, preserves all (small) colimits. &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:5&quot;&gt;
      &lt;p&gt;If you prefer more of an article-style thing to slides then take a look at the &lt;a href=&quot;http://www.cs.ox.ac.uk/ACT2019/preproceedings/Bryce%20Clarke.pdf&quot;&gt;pre-proceedings&lt;/a&gt; from ACT2019. &lt;a href=&quot;#fnref:5&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:6&quot;&gt;
      &lt;p&gt;Thanks again to Bryce Clarke for &lt;a href=&quot;https://twitter.com/8ryceClarke/status/1150434205031161864&quot;&gt;answering this question&lt;/a&gt;. &lt;a href=&quot;#fnref:6&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><category term="blog" /><category term="category-theory" /><summary type="html">An idea that came up in a few talks at CT2019 was that of ‘spans whose left leg is a left adjoint’. I managed (luckily) to get a chance to ask Mike Shulman a few questions about this, as well as post in #math.CT:matrix.org. What follows are some things that I learnt (mostly from [BD86]).</summary></entry><entry><title type="html">CT2019</title><link href="https://thosgood.github.io/blog/2019/07/13/ct2019.html" rel="alternate" type="text/html" title="CT2019" /><published>2019-07-13T00:00:00+00:00</published><updated>2019-07-13T00:00:00+00:00</updated><id>https://thosgood.github.io/blog/2019/07/13/ct2019</id><content type="html" xml:base="https://thosgood.github.io/blog/2019/07/13/ct2019.html">&lt;p&gt;I have just come back from CT2019 in Edinburgh, and it was a fantastic week. There were a bunch of really interesting talks, and I had a chance to meet some lovely people. I also got to tell people about &lt;a href=&quot;https://www.matrix.to/#/#math.CT:matrix.org&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#math.CT:matrix.org&lt;/code&gt;&lt;/a&gt;, and so hopefully that will start to pick up in the not-too-distant future.&lt;/p&gt;

&lt;!--more--&gt;
&lt;hr /&gt;

&lt;p&gt;In no particular order, and with many glaring omissions, here are the slides from some of the talks that I really enjoyed:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://conferences.inf.ed.ac.uk/ct2019/slides/shulman.pdf&quot;&gt;Internal languages of higher toposes (Michael Shulman)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://conferences.inf.ed.ac.uk/ct2019/slides/sobocinski.pdf&quot;&gt;Graphical Linear Algebra (Pawel Sobocinski)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://conferences.inf.ed.ac.uk/ct2019/slides/riehl.pdf&quot;&gt;A formal category theory for &lt;script type=&quot;math/tex&quot;&gt;\infty&lt;/script&gt;-categories (Emily Riehl)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://conferences.inf.ed.ac.uk/ct2019/slides/paoli.pdf&quot;&gt;Segal-type models of weak &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;-categories (Simona Paoli)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://conferences.inf.ed.ac.uk/ct2019/slides/3.pdf&quot;&gt;An Axiomatic Approach to Algebraic Topology: A Theory of Elementary &lt;script type=&quot;math/tex&quot;&gt;(\infty,1)&lt;/script&gt;-Toposes (Nima Rasekh)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://conferences.inf.ed.ac.uk/ct2019/slides/63.pdf&quot;&gt;Internal lenses as monad morphisms (Bryce Clarke)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://conferences.inf.ed.ac.uk/ct2019/slides/54.pdf&quot;&gt;Dagger limits (Martti Karvonen)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://conferences.inf.ed.ac.uk/ct2019/slides/73.pdf&quot;&gt;Hopf-Frobenius Algebras (Joseph Collins)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="blog" /><category term="category-theory" /><summary type="html">I have just come back from CT2019 in Edinburgh, and it was a fantastic week. There were a bunch of really interesting talks, and I had a chance to meet some lovely people. I also got to tell people about #math.CT:matrix.org, and so hopefully that will start to pick up in the not-too-distant future.</summary></entry><entry><title type="html">Skomer island</title><link href="https://thosgood.github.io/life/2019/04/15/skomer-island.html" rel="alternate" type="text/html" title="Skomer island" /><published>2019-04-15T00:00:00+00:00</published><updated>2019-04-15T00:00:00+00:00</updated><id>https://thosgood.github.io/life/2019/04/15/skomer-island</id><content type="html" xml:base="https://thosgood.github.io/life/2019/04/15/skomer-island.html">&lt;p&gt;I haven’t posted anything in a while, and rather than trying to write about maths, I wanted to just share some lovely photos of Skomer island (which I recently visited).
I am even less knowledgeable about birds than I am about maths, but I do love them, and this was the first time in my life that I’d actually seen a puffin in the flesh!&lt;/p&gt;

&lt;!--more--&gt;
&lt;hr /&gt;

&lt;p&gt;I am from North Devon, and just off the coast there is a small island called &lt;a href=&quot;https://en.wikipedia.org/wiki/Lundy&quot;&gt;Lundy&lt;/a&gt;, which has a very interesting history, but is also famous for being the home to one of the few Atlantic puffin colonies in the British Isles.&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;
In the last few decades, sadly, the number of breeding pairs of puffins has been in sharp decline, and when I went over there about 10 years ago I didn’t see a single one.
Thanks to lots of work by dedicated volunteers, it seems like the puffin population of Lundy is slowly on the rise again, and so hopefully the future will see the return of Lundy as a puffin sanctuary.&lt;/p&gt;

&lt;p&gt;Just off the west coast of Wales, in Pembrokeshire, there is another island famous for its fauna: &lt;a href=&quot;https://en.wikipedia.org/wiki/Skomer&quot;&gt;Skomer&lt;/a&gt;.
As well as housing about half of the world’s population of &lt;a href=&quot;https://en.wikipedia.org/wiki/Manx_shearwater&quot;&gt;Manx shearwaters&lt;/a&gt;&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;, being the unique home of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Skomer_vole&quot;&gt;Skomer vole&lt;/a&gt;, and having numerous other species of birds, seals, and rabbits, it also has the largest puffin colony in southern Britain.&lt;/p&gt;

&lt;p&gt;Puffins are extremely cute&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; birds who mate for life, returning to the same burrows each year in order to find their partner, mate, and then leave (flying solo to the northern seas) for six or seven months, before coming back the next April.
To quote from the &lt;a href=&quot;https://en.wikipedia.org/wiki/Atlantic_puffin&quot;&gt;Wikipedia article&lt;/a&gt;,&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Spending the autumn and winter in the open ocean of the cold northern seas, the Atlantic puffin returns to coastal areas at the start of the breeding season in late spring.
It nests in clifftop colonies, digging a burrow in which a single white egg is laid.
The chick mostly feeds on whole fish and grows rapidly.
After about 6 weeks, it is fully fledged and makes its way at night to the sea.
It swims away from the shore and does not return to land for several years.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As of 2015, the Atlantic puffin is rated ‘vulnerable’ by the International Union for the Conservation of Nature, and was reported as being ‘threatened with extinction’ by BirdLife International in 2018.&lt;/p&gt;

&lt;p&gt;&lt;a data-flickr-embed=&quot;true&quot; href=&quot;https://www.flickr.com/photos/timhosgood/albums/72157677732207497&quot; title=&quot;Skomer island&quot;&gt;&lt;img src=&quot;https://live.staticflickr.com/7852/40648359233_c37c6a3618_z.jpg&quot; width=&quot;640&quot; height=&quot;427&quot; alt=&quot;Skomer island&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h1&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Indeed, it seems to be the case that the name &lt;em&gt;Lundy&lt;/em&gt; comes from the Old Norse word for puffin (c.f. &lt;a href=&quot;https://en.wikipedia.org/wiki/Lundey&quot;&gt;Lundey&lt;/a&gt;, off the coast of Reykjavík). &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;Interestingly, the Latin name for which is &lt;em&gt;Puffinus puffinus&lt;/em&gt;. &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;No citation needed. &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><category term="life" /><category term="birds" /><summary type="html">I haven’t posted anything in a while, and rather than trying to write about maths, I wanted to just share some lovely photos of Skomer island (which I recently visited). I am even less knowledgeable about birds than I am about maths, but I do love them, and this was the first time in my life that I’d actually seen a puffin in the flesh!</summary></entry><entry><title type="html">Twisting cochains and arbitrary dg-categories</title><link href="https://thosgood.github.io/blog/2018/12/12/twisting-cochains-and-arbitrary-dg-categories.html" rel="alternate" type="text/html" title="Twisting cochains and arbitrary dg-categories" /><published>2018-12-12T00:00:00+00:00</published><updated>2018-12-12T00:00:00+00:00</updated><id>https://thosgood.github.io/blog/2018/12/12/twisting-cochains-and-arbitrary-dg-categories</id><content type="html" xml:base="https://thosgood.github.io/blog/2018/12/12/twisting-cochains-and-arbitrary-dg-categories.html">&lt;p&gt;Having recently been thinking about twisting cochains (a major part of my thesis) a bit more, I think I better understand one reason why they are very useful (and why they were first introduced by Bondal and Kapranov), and that’s in ‘fixing’ a small quirk about dg-categories that I didn’t quite understand way back when I wrote &lt;a href=&quot;/blog/2018/04/26/derived-dg-triangulated-and-infinity-categories.html&quot;&gt;this post&lt;/a&gt; about derived, dg-, and &lt;script type=&quot;math/tex&quot;&gt;A_\infty&lt;/script&gt;-categories and their role in ‘homotopy things’.&lt;/p&gt;

&lt;p&gt;This isn’t a long post and could probably instead be a tweet but then this blog would be a veritable ghost town.&lt;/p&gt;

&lt;!--more--&gt;
&lt;hr /&gt;

&lt;p&gt;First of all, for the actual definitions of twisting/twisted cochains/complexes (the nomenclature varies wildly and seemingly inconsistently),&lt;sup id=&quot;fnref:7&quot;&gt;&lt;a href=&quot;#fn:7&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; I will shamelessly refer the interested reader to &lt;del&gt;some notes I wrote a while back&lt;/del&gt;. (update: these notes have been subsumed into my PhD thesis)&lt;/p&gt;

&lt;p&gt;Secondly, the ‘quirk’ of dg-categories about which I’m talking&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; is that, for a lot of people&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;, it is the (pre-)triangulated structure that is interesting.
This means that (as far as I am aware)&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt; an arbitrary dg-category lacks some sort of homotopic interpretation because it has no structure corresponding to &lt;em&gt;stability&lt;/em&gt; ‘upstairs’.
Twisting cochains then, as they were introduced by Bondal and Kapranov&lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;, are a sort of solution to this problem, in that (to quote from where else but the nLab) &lt;em&gt;“passing from a dg-category to its category of twisted complexes is a step towards enhancing it to a pretriangulated dg-category”&lt;/em&gt;.&lt;sup id=&quot;fnref:5&quot;&gt;&lt;a href=&quot;#fn:5&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;
In essence, they give us the ‘smallest’ ‘bigger’ dg-category in which we have shifts and functorial cones.&lt;/p&gt;

&lt;p&gt;Really I am just parroting back the reasons why these things were initially invented, but it’s something that I hadn’t fully appreciated, since I’ve been working with specific types of twisted complexes (ones that somehow correspond to projective/free things and concentrated in a single degree) that really arise in what appears (to me) to be a completely different manner: namely in the setting of (O’Brian), Toledo, and Tong&lt;sup id=&quot;fnref:6&quot;&gt;&lt;a href=&quot;#fn:6&quot; class=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt; where they are (to be vague) thought of as resolutions of coherent sheaves, or first-order perturbations of certain bicomplexes by flat connections.&lt;/p&gt;

&lt;p&gt;I really have no geometric/homotopic intuition as to why this specific case of twisted complexes corresponds thusly, and haven’t been able to find any references at all.
Any ideas?&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h1&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:7&quot;&gt;
      &lt;p&gt;Although for me, at least, I (tend to) use &lt;em&gt;twisted complex&lt;/em&gt; to refer to the concept of Bondal and Kapranov, and &lt;em&gt;twisting cochain&lt;/em&gt; to refer to the concept of (O’Brian), Toledo, and Tong. &lt;a href=&quot;#fnref:7&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Having hidden this part in the main post and not the excerpt makes me feel like I’m writing the mathematical equivalent of click-bait journalism. Next will come posts with titles such as &lt;em&gt;“Nine functors that you wouldn’t believe have derived counterparts — number six will shock you!”&lt;/em&gt; and &lt;em&gt;“You Will Laugh And Then Cry When You See What This Child Did With The Grothendieck Construction”&lt;/em&gt;. I apologise in advance. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;[weasel words] [citation needed] &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;which is, admittedly, best measured on the Planck scale. &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;A. I. Bondal, M. M. Kapranov, “Enhanced triangulated categories”, Mat. Sb., 181:5 (1990), 669–683; Math. USSR-Sb., 70:1 (1991), 93–107. &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:5&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://ncatlab.org/nlab/show/twisted+complex&quot;&gt;https://ncatlab.org/nlab/show/twisted+complex&lt;/a&gt; &lt;a href=&quot;#fnref:5&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:6&quot;&gt;
      &lt;p&gt;A bunch of papers, but in particular e.g. D. Toledo and Y. L. L. Tong, “Duality and Intersection Theory in Complex Manifolds. I.”, Math. Ann., 237 (1978), 41—77. &lt;a href=&quot;#fnref:6&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><category term="blog" /><category term="category-theory" /><summary type="html">Having recently been thinking about twisting cochains (a major part of my thesis) a bit more, I think I better understand one reason why they are very useful (and why they were first introduced by Bondal and Kapranov), and that’s in ‘fixing’ a small quirk about dg-categories that I didn’t quite understand way back when I wrote this post about derived, dg-, and -categories and their role in ‘homotopy things’. This isn’t a long post and could probably instead be a tweet but then this blog would be a veritable ghost town.</summary></entry></feed>